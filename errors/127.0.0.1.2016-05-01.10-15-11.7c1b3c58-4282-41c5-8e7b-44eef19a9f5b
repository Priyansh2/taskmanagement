(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'function' object has no attribute 'args'"
p3
sS'layer'
p4
S'/home/vaibhav/sucks/web2py/applications/project1/controllers/default.py'
p5
sS'code'
p6
S'def index():\n    if auth.is_logged_in():\n        response.flash = T("WELCOME")\n        redirect(URL(\'default\',\'home\'))\n    else:\n        redirect(URL(\'default\',\'start\'))\n\ndef start():\n    \n    print request.post_vars\n    is_clicked = False\n    if request.post_vars["remember_me"]:\n        is_clicked = True\n    \n    fregister=auth.register()\n    flogin=auth.login()\n    flpswd=auth.request_reset_password()\n    return locals()\n\ndef home():\n    if auth.is_logged_in():\n        pform=SQLFORM(db.project).process()\n        allmembers = db().select(db.member.ALL)\n        accessible={}\n        for mem in allmembers:\n            if mem.id ==auth.user.id:\n                accessible[mem.pid]=1\n            else:\n                accessible[mem.pid]=0\n        print "itz >>",accessible\n        print accessible[1]\n        print accessible[2]\n        pform.element(\'textarea[name=description]\')[\'_style\']=\'height:5em\'\n        if pform.accepted:\n            take=3\n            rows = db().select(db.project.ALL,orderby=db.project.created_on)\n            for latest in rows:\n                take=latest.id\n            db.member.insert(uid=auth.user.id,pid=take)\n            redirect(URL(\'home\'))\n        if len(request.args):\n            page=int(request.args[0])\n        else: \n            page=0\n        items_per_page=20\n        limitby=((page)*items_per_page,(page+1)*items_per_page+1)\n        rows = db().select(db.project.ALL,limitby=limitby,orderby=~db.project.created_on)\n        return dict(form=FORM(INPUT(_id=\'keyword\',_name=\'keyword\',_onkeyup="ajax(\'callback\', [\'keyword\'], \'target\');")),target_div=DIV(_id=\'target\'),rows=rows,page=page,items_per_page=items_per_page,pform=pform,accessible=accessible)\n    else:\n        redirect(URL(\'default\',\'start\'))\n\n        \n            \ndef create_project():\n    db.task.created_by.readable=True\n    db.task.created_on.readable=True\n    form=SQLFORM(db.project).process()\n    if form.accepted:\n        redirect(URL(\'home\'))\n    return locals()\n\ndef main():\n    db.task.pid.default=request.args(0)\n    form=SQLFORM(db.task).process()\n    form.element(\'input[name=title]\')[\'_style\']=\'width:20em\'\n    form.element(\'textarea[name=description]\')[\'_style\']=\'width:20em;height:5em\'\n    form.element(\'input[name=duedat]\')[\'_style\']=\'width:20em\'\n    if form.accepted:\n        redirect(URL(\'main\',args=request.args(0)))\n    project=db.project(request.args(0,cast=int))\n    store=db(db.auth_user.id>0).select()\n    tasks=db((db.task.pid==project.id)).select(orderby=~db.task.created_on)\n    subtasks=db((db.checklist.pid==project.id)).select(orderby=~db.checklist.created_on)\n    return locals()\n\ndef add_member():\n    vars=request.vars\n    var1= vars.uid\n    var2= vars.pid\n    st="You have been assigned to project "\n    st1="Click here to approve:-"\n    url="http://127.0.0.1:8000/project1/default/approval?uid=" + var1 + "&pid=" + var2\n    pname=vars.project_name\n    fname=vars.sender_fname.capitalize()\n    lname=vars.sender_lname.capitalize()\n    sub=st+pname+" by "+fname+" "+lname +"\\n" +st1 +url\n    print sub\n    current.send_mail(vars.emailto,"Project Chaperon Invitation",sub)\n    return locals()\n\ndef approval():\n    msg = ""\n    return locals()\n\ndef add_approved():\n    var1=request.args(0)\n    var2=request.args(1)\n    db.member.insert(uid=var1,pid=var2)\n    redirect(URL(\'main\',args=request.args(0)))\n    return locals()\n\ndef request():\n    return locals()\n\ndef task():\n    db.task.pid.default=request.args(0)\n    form=SQLFORM(db.task).process()\n    if form.accepted:\n        redirect(URL(\'main\',args=request.args(0)))\n    return locals()\n\ndef checklist():\n    db.checklist.pid.default=request.args(0)\n    db.checklist.tid.default=request.args(1)\n    form=SQLFORM(db.checklist).process()\n    if form.accepted:\n        redirect(URL(\'main\',args=request.args(0)))\n    return locals()\n\ndef changeitall():\n    vars=request.vars \n    db(db.checklist.id ==  vars.commid).delete()\n    return "deleted"\n\ndef done():\n    vars=request.vars \n    complete=db.checklist(id =  vars.commid)\n    if complete.status:\n        complete.update_record(status=0)\n    else:\n        complete.update_record(status=1)\n    return complete.status\n     \n\ndef move():\n    vars = request.vars\n    move=db.checklist(id =  vars.it)\n    move.update_record(tid=vars.to)\n    return "done"\n\n\n\n\ndef callback():\n    """an ajax callback that returns a <ul> of links to wiki pages"""\n    query = db.project.name.contains(request.vars.keyword)\n    pages = db(query).select(orderby=db.project.name)\n    links = [A(p.name, _href=URL(\'main\',args=p.id)) for p in pages]\n\n    return UL(*links)\n\n\n\n\n\n\nme=auth.user_id\n\n\ndef tm():\n    query=(db.tm.assigned_to==me) | (db.tm.created_by==me)\n    grid=SQLFORM.grid(query, orderby=~db.tm.modified_on,create=False,details=False,editable=False,deletable=lambda  row:(row.created_by==me))\n    return locals()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef product():\n    product=SQLFORM(db.product).process()\n    if product.accepted:\n        response.flash="Done"\n    return dict(product=product)\n\n\ndef login():\n    login=SQLFORM(db.auth_user)\n    return dict(form=login)\n\ndef user():\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(home)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/vaibhav/sucks/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/vaibhav/sucks/web2py/applications/project1/controllers/default.py", line 211, in <module>\n  File "/home/vaibhav/sucks/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/vaibhav/sucks/web2py/applications/project1/controllers/default.py", line 41, in home\n    if len(request.args):\nAttributeError: \'function\' object has no attribute \'args\'\n'
p11
s.